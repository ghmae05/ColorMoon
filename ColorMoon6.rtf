{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Exemple de conversion de couleurs avec Chroma.js\
\
function convertColorFormats(rgbColor) \{\
  const [r, g, b] = rgbColor;\
  const chromaColor = chroma(r, g, b);\
\
  // Conversion en diff\'e9rents formats\
  const hex = chromaColor.hex();\
  const hsl = chromaColor.hsl();\
  const cmyk = chromaColor.cmyk();\
  const pantone = getPantoneCode(hex); // Impl\'e9mente cette fonction selon les besoins\
\
  return \{\
    rgb: `rgb($\{r\}, $\{g\}, $\{b\})`,\
    hex: hex,\
    hsl: `hsl($\{Math.round(hsl[0])\}, $\{Math.round(hsl[1] * 100)\}%, $\{Math.round(hsl[2] * 100)\}%)`,\
    cmyk: `cmyk($\{cmyk.map(x => Math.round(x * 100)).join('% ')\})`,\
    pantone: pantone\
  \};\
\}\
\
// Fonction hypoth\'e9tique pour obtenir le code Pantone bas\'e9 sur le code HEX\
function getPantoneCode(hex) \{\
  // Impl\'e9mentation ou appel \'e0 une API pour la conversion HEX -> Pantone\
  return "PANTONE_PLACEHOLDER";\
\}\
}